{"version":3,"sources":["services/yllapito.js","App.js","index.js"],"names":["baseUrl","yllapito","axios","get","then","response","data","newPerson","post","person","delete","concat","id","put","Filter","_ref","text","value","onChange","react_default","a","createElement","Persons","_ref2","personsToShow","remover","Person","_ref3","name","number","onClick","map","key","PersonForm","_ref4","form","onSubmit","nameValue","nameOnChange","numberValue","numberOnChange","type","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","newFilter","setNewFilter","_useState9","_useState10","notificationMsg","setNotificationMsg","_useState11","_useState12","errorNotificationMsg","setErrorNotificationMsg","useEffect","initialPersons","catch","error","console","log","alert","Notification","_ref5","message","className","filter","toLowerCase","includes","refreshList","event","preventDefault","nameIsNotListed","length","forEach","window","confirm","changedPerson","objectSpread","returnedPerson","setTimeout","target","App_Filter","App_PersonForm","App_Persons","promise","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a39712a9.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newPerson) => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst remove = (person) => {\n    const request = axios.delete(`${baseUrl}/${person.id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (person) => {\n    const request = axios.put(`${baseUrl}/${person.id}`, person)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport yllapito from './services/yllapito'\nimport './index.css'\n\nconst Filter = ({ text, value, onChange }) => (\n  <p>{text}\n    <input\n      value={value}\n      onChange={onChange}\n    /></p>\n)\n\nconst Persons = ({ personsToShow, remover }) => {\n\n  const Person = ({ person }) =>\n    <p>\n      {person.name} {person.number} <button onClick={() => remover(person)}>\n        poista\n  </button></p>\n\n  return personsToShow.map(person =>\n    <Person person={person}\n      key={person.id} />\n  )\n}\n\n\nconst PersonForm = ({ form }) => (\n  <form onSubmit={form.onSubmit}>\n    <div>\n      nimi: <input\n        value={form.nameValue}\n        onChange={form.nameOnChange}\n      />\n    </div>\n    <div>\n      numero: <input\n        value={form.numberValue}\n        onChange={form.numberOnChange}\n      />\n    </div>\n    <div>\n      <button type=\"submit\">lisää</button>\n    </div>\n  </form>\n)\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notificationMsg, setNotificationMsg] = useState(null)\n  const [errorNotificationMsg, setErrorNotificationMsg] = useState(null)\n\n  useEffect(() => {\n    yllapito\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n      .catch(error => {\n        console.log(error)\n        alert('virhe haettaessa tietoja')\n      })\n  }, [])\n\n\n\n  const Notification = ({ message, className }) => {\n    if (message === null) {\n      return null\n    }\n\n    return (\n      <div className={className}>\n        {message}\n      </div>\n    )\n  }\n\n  const handleRemovePerson = (person) => {\n    if (window.confirm(`Poistetaanko ${person.name}`)) {\n      yllapito\n        .remove(person)\n        .then(promise => {\n          refreshList()\n          setNotificationMsg(`Poistettiin ${person.name}`)\n          setTimeout(() => {\n            setNotificationMsg(null)\n          }, 3000)\n        })\n        .catch(error => {\n          setErrorNotificationMsg(`Henkilö ${person.name} on jo poistettu`)\n          setTimeout(() => {\n            setErrorNotificationMsg(null)\n          }, 3000)\n          console.log(error)\n          refreshList()\n        })\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    var nameIsNotListed = true\n\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n\n      id: persons[persons.length - 1].id + 1,\n    }\n    persons.forEach(person => {\n      if (person.name === newPerson.name) {\n        if (window.confirm(`${person.name} on jo luettelossa, korvataanko vanha numero uudella?`)) {\n          const changedPerson = { ...person, number: newPerson.number }\n          yllapito\n            .update(changedPerson)\n            .then(returnedPerson => {\n              setPersons(persons.map(person => person.name !== changedPerson.name ? person : returnedPerson))\n              setNotificationMsg(`Muutettiin henkilön ${person.name} puhelinnumeroa`)\n              setTimeout(() => {\n                setNotificationMsg(null)\n              }, 3000)\n            })\n            .catch(error => {\n                setErrorNotificationMsg(`Henkilöä ${person.name} ei löydy`)\n              setTimeout(() => {\n                setErrorNotificationMsg(null)\n              }, 3000)\n              console.log(error)\n              refreshList()\n            })\n\n\n        }\n        nameIsNotListed = false\n      }\n    })\n    if (nameIsNotListed) {\n      yllapito\n        .create(newPerson)\n        .then(person => {\n          setPersons(persons.concat(person))\n          setNewName('')\n          setNewNumber('')\n          setNotificationMsg(`Lisättiin ${person.name}`)\n          setTimeout(() => {\n            setNotificationMsg(null)\n          }, 3000)\n        })\n        .catch(error => {\n          if (newPerson.name.length < 3 || newPerson.number.length < 8) {\n            setErrorNotificationMsg(`Nimen tulee olla vähintään 3 kirjainta ja puhelinnumeron 8 numeroa pitkä`)\n          } else {\n          setErrorNotificationMsg(`Henkilön ${newPerson.name} lisäys epäonnistui`)\n          }\n          setTimeout(() => {\n            setErrorNotificationMsg(null)\n          }, 3000)\n          console.log(error)\n          refreshList()\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const personsToShow = persons.filter(person =>\n    person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  const refreshList = () => {\n    yllapito\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }\n\n  const form = {\n    onSubmit: addPerson,\n    nameValue: newName,\n    nameOnChange: handleNameChange,\n    numberValue: newNumber,\n    numberOnChange: handleNumberChange\n  }\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <Notification message={notificationMsg} className='info' />\n      <Notification message={errorNotificationMsg} className='error' />\n      <Filter text='rajaa näytettäviä'\n        value={newFilter}\n        onChange={handleFilterChange}\n      />\n      <h2>lisää uusi</h2>\n      <PersonForm form={form} />\n      <h2>Numerot</h2>\n      <Persons personsToShow={personsToShow} remover={handleRemovePerson} />\n\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}